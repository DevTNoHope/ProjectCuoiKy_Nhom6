from pydantic import BaseModel, Field
from datetime import time
from typing import Optional

# ðŸŸ¢ Schema phá»¥ - thÃ´ng tin stylist
class StylistBrief(BaseModel):
    id: int
    name: str

    class Config:
        from_attributes = True


# ðŸŸ¢ Schema táº¡o má»›i ca lÃ m
class WorkScheduleCreate(BaseModel):
    stylist_id: int
    weekday: str = Field(..., example="Mon")
    start_time: time
    end_time: time


# ðŸŸ¡ Schema cáº­p nháº­t ca lÃ m
class WorkScheduleUpdate(BaseModel):
    weekday: Optional[str] = None
    start_time: Optional[time] = None
    end_time: Optional[time] = None


# ðŸ”µ Schema tráº£ dá»¯ liá»‡u ra client
class WorkScheduleOut(BaseModel):
    id: int
    stylist_id: int
    weekday: str
    start_time: time
    end_time: time
    stylist: Optional[StylistBrief] = None  # âœ… thÃªm thÃ´ng tin stylist

    class Config:
        from_attributes = True
